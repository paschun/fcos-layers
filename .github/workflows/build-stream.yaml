name: Build all multi-arch images for a single coreos stream

on:
  workflow_call:
    inputs:
      stream:
        required: true
        type: string

jobs:
  setup-env:
    runs-on: ubuntu-latest
    steps:
      - name: Get versions to build
        id: get-vers
        run: |
          FCOS_VERSION=$(curl -s "https://builds.coreos.fedoraproject.org/streams/${{ inputs.stream }}.json" | jq -r '.architectures.x86_64.artifacts.metal.release')
          BUILDER_VERSION=$(echo "$FCOS_VERSION" | cut -d '.' -f 1)
          ZFS_VERSION=$(curl -s "https://api.github.com/repos/openzfs/zfs/releases" | jq -r --arg ZMV "zfs-" '[ .[] | select(.prerelease==false and .draft==false) | select(.tag_name | startswith($ZMV))][0].tag_name' | cut -f2- -d-)

          echo "FCOS_VERSION=$FCOS_VERSION" | tee -a $GITHUB_OUTPUT
          echo "BUILDER_VERSION=$BUILDER_VERSION" | tee -a $GITHUB_OUTPUT
          echo "ZFS_VERSION=$ZFS_VERSION" | tee -a $GITHUB_OUTPUT

      - name: check if base tags exist
        id: tag-exists-base
        uses: tyriis/docker-image-tag-exists@v2.1.0
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/base
          tag: ${{ steps.get-vers.outputs.FCOS_VERSION }}

      - name: check if zfs tags exist
        id: tag-exists-zfs
        uses: tyriis/docker-image-tag-exists@v2.1.0
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/zfs
          tag: ${{ steps.get-vers.outputs.FCOS_VERSION }}-${{ steps.get-vers.outputs.ZFS_VERSION }}

    outputs:
      # Export each variable individually as a job output
      FCOS_VERSION: ${{ steps.get-vers.outputs.FCOS_VERSION }}
      BUILDER_VERSION: ${{ steps.get-vers.outputs.BUILDER_VERSION }}
      ZFS_VERSION: ${{ steps.get-vers.outputs.ZFS_VERSION }}
      base-tag-exists: ${{ steps.tag-exists-base.outputs.tag == 'found' }}
      zfs-tag-exists: ${{ steps.tag-exists-zfs.outputs.tag == 'found' }}

  build-base:
    needs: setup-env
    uses: ./.github/workflows/build-multiarch-image.yaml
    if: ${{ ! needs.setup-env.outputs.base-tag-exists }}
    with:
      stream: ${{ inputs.stream }}
      image_name: base
      FCOS_VERSION: ${{ needs.setup-env.outputs.FCOS_VERSION }}
      build_args: |
        BASE_IMAGE=quay.io/fedora/fedora-coreos:${{ needs.setup-env.outputs.FCOS_VERSION }}
    secrets: inherit

  build-zfs:
    needs:
      - setup-env
      - build-base
    uses: ./.github/workflows/build-multiarch-image.yaml
    if: ${{ ! needs.setup-env.outputs.zfs-tag-exists }}
    with:
      stream: ${{ inputs.stream }}
      image_name: zfs
      FCOS_VERSION: ${{ needs.setup-env.outputs.FCOS_VERSION }}
      ZFS_VERSION: ${{ needs.setup-env.outputs.ZFS_VERSION }}
      build_args: |
        BASE_IMAGE=ghcr.io/${{ github.repository }}/base:${{ needs.setup-env.outputs.FCOS_VERSION }}
        BUILDER_VERSION=${{ needs.setup-env.outputs.BUILDER_VERSION }}
        ZFS_VERSION=${{ needs.setup-env.outputs.ZFS_VERSION }}
    secrets: inherit
